{\rtf1\ansi\deff1{\fonttbl{\f1\fnil\fcharset0 Geneva;}{\f2\fnil\fcharset0 Courier;}
{\f3\fnil\fcharset0 Helvetica;}{\f4\fnil\fcharset0 Monaco;}{\f5\fnil\fcharset0 New York;}
{\f6\fnil\fcharset0 Palatino;}{\f7\fnil\fcharset0 Times;}{\f8\fnil\fcharset0 Chicago;}
{\f9\fnil\fcharset2 Symbol;}{\f10\fnil\fcharset0 System;}}
{\colortbl
\red255\green255\blue255;
\red0\green0\blue255;
\red0\green0\blue0;
}
{\stylesheet{\s0\sbasedon222\snext0\ri-340\f1\fs20 Normal;}{\s1\sbasedon0\snext1
\li1440\fi-1160\ri380\sb100\sa60\f1\fs20\b\ul Subtopic;}{\s2\sbasedon0\snext2\li540\ri740\sa60
\f1\fs20 FunctionBody1;}{\s3\sbasedon0\snext3\li260\fi-260\ri380\sb120\sa120\tx1440\f1\fs24\b\ul 
Topic;}{\s4\sbasedon0\snext4\li260\ri1100\tx540\tx1440\tx4320\f1\fs20 TopicBody;}}
\deftab720\paperw11900\paperh16820\margl1080\margr1080\margt1080\margb1080\pgnstarts1
\sectd\headery720\footery720
\pard\plain
{\header\pard\plain\s1\tqc\tx4860\tqr\tx9720\fs20
\chdate \tab Untitled0\tab \chpgn \par
}
\pard\plain
\pard\plain\s3\li260\fi-260\ri380\sb120\sa120\tx1440\b\ul
\b0\ulnone \'95\tab \b\ul About Radia\ulnone      \par
\pard\plain\s4\li260\ri1100\tx540\tx1440\tx4320\fs20
Thanks for trying Radia.\par
\par
\pard\plain\s4\li260\ri740\tx540\tx1440\tx4320\fs20
Radia is a general-purpose 3D magnetostatics computer code.\par
It was written with a primary goal to facilitate design of Insertion Devices for Synchrotron Radiati
on Sources. However, it has also proved its efficiency in solving many other types of 3D boundary pr
oblems of magnetostatics.\par
\par
Current version\: 4.25\par
This version of Radia was developed as an extension to Igor Pro (WaveMetrics). \par
Release date\: May 2008\par
\par
Radia is copyright European Synchrotron Radiation Facility (1997-2002)\par
portions copyright Synchrotron SOLEIL (2002-2008)\par
\par
Authors\: \par
O. Chubar (oleg.chubar@synchrotron-soleil.fr)\par
P. Elleaume (elleaume@esrf.fr)\par
J. Chavanne (chavanne@esrf.fr)\par
\par
\pard\plain\s4\li260\ri1100\tx540\tx1440\tx4320\fs20
\par
\pard\plain\s3\li260\fi-260\ri380\sb120\sa120\tx1440\b\ul
\b0\ulnone \'95\tab \b\ul Radia Functions\par
\pard\plain\s4\li260\ri740\tx540\tx1440\tx4320\fs20
Radia for Igor Pro is mainly a set of additional functions available in the Igor Pro macro language.
 These functions should be used to define 3D geometries, magnetic materials, boundary conditions, to
 solve problems of magnetostatics, and to display the resulting magnetic field in graphs.\par
\par
Radia functions can be easily recognized\:
 all of them start with "rad". The reference to these funct
ions is available in this file; besides, it is accessible via Igor Pro Help Browser (menu "Help->Igo
r Help Browser", and then tab "Command Help").\par
\pard\plain\s4\li260\ri1100\tx540\tx1440\tx4320\fs20
\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjRecMag\b0\ulnone (P, D, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, D, M\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a uniformly magnetized rectangular parallelepiped block. \par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
P is block's center point (wave of 3 elements);\par
D is array of block dimensions (wave of 3 elements);\par
M is magnetization vector inside the block (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjThckPgn\b0\ulnone (x, lx, P, t, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable x, lx\par
\tab wave P, M\par
\tab string t\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a uniformly magnetized extruded polygonal block. \par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
x is the position of the block's center of gravity in the extrusion direction;\par
lx is the thickness;\par
P is a wave of cartesian coordinates of points describing the polygon in 2D (to be created e.g. as 
\i make/O P=\{\{y1,z1\},\{y2,z2\},\{y3,z3\},...\}\i0 );\par
t is string character defining the orientation of the extrusion axis; it can be "x", "y" or "z";
\par
M is block's magnetization vector (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\pard\plain\s2\li360\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjCylMag\b0\ulnone (P, r, h, n, t, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, M\par
\tab variable r, h, n\par
\tab string t\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a uniformly magnetized extruded right polygonal block, which approaches cylindrical shape at
 large number of segments n. \par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
P is a wave of 3 cartesian coordinates of the cylinder center point, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{x,y,z\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
r is the cylinder base radius;\par
h is the cylinder height;\par
n is number of segments of the base polygon approximating a circle;\par
t is string character defining the orientation of the extrusion axis; it can be "x", "y" or "z";
\par
M is block's magnetization vector (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjPolyhdr\b0\ulnone (P, F, L, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, F, L, M\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a uniformly magnetized polyhedron (closed volume limited by planes).\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
P is 2D array of cartesian coordinates of the polyhedron vertex points, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{\{x1,y1,z1\},\{x2,y2,z2\},\{x3,y3,z3\},...\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
F is flat array of indexes of vertex points defining the polyhedron faces, to be created e.g. as
\par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{f1i1, f1i2,..., f2i1, f2i2,...\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
L 
is array of integer numbers equal to the numbers of vertex points in each face of the polyhedron; th
e order of the faces is the same as in the array F (the length of the array F is equal to the sum of
 elements of the array L);\par
M is block's magnetization vector (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjArcPgnMag\b0\ulnone (P, t1, F, A, n, t2, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, F, A, M\par
\tab variable n\par
\tab string t1, t2\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a uniformly magnetized finite-length arc of polygonal cross-section, which is approximated b
y n segment polyhedrons. \par
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
P 
is a wave of 2 cartesian coordinates defining the position of the rotation axis in the plane perpend
icular to this axis, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{x,y\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t1 is string character defining the orientation of the rotation axis; it can be "x", "y" or "z";
\par
F is array of radial and axial coordinates of vertex points of the cross-section polygon, to be crea
ted e.g. as \i make/O F=\{\{r1,z1\},\{r2,z2\},...\}\i0 ;\par
\pard\plain\s2\li360\ri720\sa60\fs20
A wave of 2 numbers -  initial and final azimuth angles, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O A=\{a1,a2\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is number of segments;\par
t2 is string which can be either "sym" or "nosym"; depending on the value of this switch, the magnet
ization vectors in n sector polyhedrons either will be linked by rotational symmetry ("sym"), or wil
l behave as independent magnetization vectors at any subsequent relaxation;\par
M is magnetization vector (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjMltExtPgn\b0\ulnone (P, N, H, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, N, H, M\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Attempts to create a convex polyhedron or a set of convex polyhedrons based on horizontal slices, wh
ich should be convex planar polygons. \par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
P is "flat" 2D array of the slice polygons' coordinates, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{\{x11,y11\},\{x12,y12\},\{x13,y13\},...,\{x21,y21\},\{x22,y22\},\{x23,y23\},...\}\i0 
;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
N is array of integer values representing numbers of points in the slice polygons, to be created e.g
. as \i make/O N=\{n1,n2,n3,...\}\i0 ;\par
H is array of attitudes (vertical positions) of the slice polygons, to be created e.g. as\par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O H=\{h1,h2,h3,...\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
M is block's magnetization vector (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjMltExtRtg\b0\ulnone (P, D, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, D, M\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Attempts to create one uniformly magnetized convex polyhedron or a set of convex polyhedrons based o
n rectangular slices. The rectangular slices are assumed to be parallel to the XY plane.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
P is "flat" 2D array of the slice rectagles' center points (to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{\{x1,y1,z1\},\{x2,y2,z2\},...\}\i0 );\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
D is "flat" array of dimensions of the slice rectangles along x and y (to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O D=\{\{dx1,dy1\},\{dx2,dy2\},...\}\i0 );\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
M is block's magnetization vector (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjMltExtTri\b0\ulnone (x, lx, P, S, t1, M, t2)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable x, lx\par
\tab wave P, S, M\par
\tab string t1, t2\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Attempts to create a triangulated extruded polygon block, i.e. a straight prism with its base being 
(possibly con-convex) 2D polygon subdivided by triangulation.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
x is the position of the block's center of gravity in the extrusion direction;\par
lx is the prism height (or "thickess");\par
P is a wave of cartesian coordinates of points describing the polygon in 2D (to be created e.g. as 
\i make/O P=\{\{y1,z1\},\{y2,z2\},...\}\i0 );\par
\pard\plain\s2\li360\ri720\sa60\fs20
S is array of subdivision (triangulation) parameters, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O S=\{\{k1,q1\},\{k2,q2\},...\}\par
\i0 
where k1,k2,... are, depending on the value of the option "ki->Numb|Size" numbers of parts or averag
e sizes of segments to be produced by triangulation; q1,q2,... are the corresponding ratios of the l
ast-to-first part lengths;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t1 is character defining the orientation of the rotation axis; it can be "x", "y" or "z";\par
M is block's magnetization vector (wave of 3 elements).\par
t2 is option string which can be "ki->Numb" (default) or "ki->Size" for the subdivision parameters t
o be interpreted as numbers of segments or their average lengths; "TriAngMin->..." with a real posit
ive number in place of "..." to specify minimal angle of triangles to be produced by th etriangulati
on of the base polygon (in degrees, default value is 20); "TriAreaMax->..." with a real positive num
ber in place of "..." to specify maximal area of traingles to be produced (in mm^2, not defined by d
efault); t can contain composition of these sub-strings separated by ";", e.g.\:
 "ki->Size;TriAngMin->25;TriAreaMax->10".\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjRecCur\b0\ulnone (P, D, J)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, D, J\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a current carrying rectangular parallelepiped block.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
P is block's center point (wave of 3 elements);\par
D is array of block dimensions (wave of 3 elements);\par
J is current density vector inside the block (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjArcCur\b0\ulnone (P, R, A, h, n, t1, t2, j)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, R, A\par
\tab variable h, n, j\par
\tab string t1, t2\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a current carrying finite-length arc of rectangular cross-section.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
P is array of 3 cartesian coordinates of the arc center point (wave of 3 elements);\par
R is array of 2 numbers - inner and outer radii (wave of 2 elements);\par
A is array of 2 numbers -  initial and final azimuth angles (wave of 2 elements);\par
h is height;\par
n is number of segments;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t1 is string which can be either "man" or "auto"; the magnetic field from the arc is then computed b
ased on the number of segments nseg ("man"), or on the general absolute precision level specified by
 the functions radFldCmpCrt or radFldCmpPrc ("auto");\par
t2 is string defining the orientation of the arc rotation axis; it can be "x", "y" or "z";\par
\pard\plain\s2\li360\ri720\sa60\fs20
j is azimuthal current density [T/mm^2].\par
Returns an integer number referencing the object created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjRaceTrk\b0\ulnone (P, R, D, h, n, t1, t2, j)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, R, D\par
\tab variable h, n, j\par
\tab string t1, t2\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a current-carrying racetrack coil. The coil consists of four 90-degree bents connected by fo
ur straight parts of rectangular cross-section.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
P is array of 3 cartesian coordinates of the racetrack center point (wave of 3 elements);\par
R is array of 2 numbers - inner and outer radii (wave of 2 elements);\par
D is array of 2 numbers - racetrack straight section lengths (wave of 2 elements);\par
h is height;\par
n is number of segments in the arc parts of the racetrack;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t1 is string which can be either "man" or "auto"; the magnetic field from the arc is then computed b
ased on the number of segments nseg ("man"), or on the general absolute precision level specified by
 the functions radFldCmpCrt or radFldCmpPrc ("auto");\par
t2 is string defining the orientation of the racetrack axis; it can be "x", "y" or "z";\par
\pard\plain\s2\li360\ri720\sa60\fs20
j is azimuthal current density [T/mm^2].\par
Returns an integer number referencing the object created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjFlmCur\b0\ulnone (P, i)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P\par
\tab variable i\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a filament polygonal line conductor with current. The line conductor is defined by sequence 
of points in 3D space.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
P is array of cartesian coordinates of the points (to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{\{x1,y1,z1\},\{x2,y2,z2\},...\}\i0 );\par
\pard\plain\s2\li360\ri720\sa60\fs20
i is current.\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjScaleCur\b0\ulnone (n, k)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n, k\par
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Scales current (density) in the object n by multiplying it by k coefficient (if n is a current-caryi
ng object). If n is a container, the current (density) scaling applies to all its members.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is integer number referencying an object;\par
k is current scaling coefficient.\par
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjBckg\b0\ulnone (B)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave B\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a source of uniform background magnetic field.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
B is magnetic field vector (wave of 3 elements).\par
Returns an integer number referencing the object created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjCnt\b0\ulnone (N)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave N\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a container of magnetic field source objects.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
N is array of reference numbers of the objects (to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O N=\{n1,n2,n3,...\}\i0 ).\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns an integer number referencing the object created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjCnt0\b0\ulnone ()\par
\pard\plain\s0\ri720\tx360\fs20
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates an empty container.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns an integer number referencing the object created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjAddToCnt\b0\ulnone (n0, N)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n0\par
\tab wave N\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Adds objects to the container object referenced by n0.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n0 is integer number referencying the container;\par
N is array of reference numbers of the objects to add, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O N=\{n1,n2,n3,...\}\i0 .\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns n0.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjCntSize\b0\ulnone (n)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Calculates the number of objects in the container referenced by n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is integer number referencying the container.\par
Returns number of objects calculated.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjCntStuf\b0\ulnone (N, n0)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave N\par
\tab variable n0\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Fills-in an array with reference numbers of objects present in the container n0.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
N is array for the reference numbers of the objects in the container;\par
n0 is integer number referencying the container.\par
Returns n0.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjFullMag\b0\ulnone (P, D, M, K, n, mat, C)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, D, M, K, C\par
\tab variable n, mat\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a parallelepiped block with center point P, dimensions L and color RGB. The block is magneti
zed according to M, then subdivided according to \{K[0],K[1],K[2]\}
, and added into the container n. n should be created in advance by calling the function radObjCnt.
\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
P is block's center point (wave of 3 elements);\par
D is array of block dimensions (wave of 3 elements);\par
M is magnetization vector inside the block (wave of 3 elements);\par
K is wave of 3 subdivision numbers;\par
n is integer number referencying the container;\par
mat is integer number referencying the magnetic material;\par
C is array of 3 numbers from 0 to 1 specifying intensities of red, green and blue colors.\par
Returns an integer number referencing the object created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjM\b0\ulnone (M, n)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave M\par
\tab variable n\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Specifies coordinates of geometrical center point(s) and magnetization(s) of the object referenced b
y n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
M is array of coordinates of geometrical center point(s) and magnetization(s). If n is a container, 
the array includes the container members' center points and their magnetizations;\par
n is reference number of a magnetic field source object.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjDpl\b0\ulnone (n, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Duplicates the object referenced by n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of the object to be duplicated;\par
t is a string, which can be "FreeSym->False", "FreeSym->True" or "". This specifies whether the symm
etries (transformations with multiplicity more than one) previously applied to the object obj should
 be simply copied at the duplication ("FreeSym->False" or ""), or a container of new independent obj
ects should be created in place of any symmetry previously applied to the object n. In both cases th
e final object created by the duplication has exactly the same geometry as the initial object n.
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns an integer number referencing the new object - a copy of the object referenced by n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjCutMag\b0\ulnone (N, n0, P, V, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave N, P, V\par
\tab variable n0\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Cuts the object n0 by a plane passing through the point P normally to the vector V.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
N is array of reference numbers of objects created by cutting of the object n0;\par
n0 is reference number of a 3D object to cut;\par
P is array of 3 cartesian coordinates of a point the cutting plane passes through;\par
V is array of 3 cartesian coordinates of a vector normal to the cutting plane;\par
t is a string which can be "Frame->Lab", "Frame->Loc" or "". This specifies whether the cuting plane
 is defined in the laboratory frame ("Frame->Lab" or "") or in the local frame of the object n0. 
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns number ov the objects created by the cutting.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjDivMagPln\b0\ulnone (n, S, V, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab wave S, V\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Subdivides the object n by sets of parallel planes.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of a 3D object to subdivide;\par
\pard\plain\s2\li360\ri720\sa60\fs20
S is array of main subdivision parameters, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O S=\{\{k1,q1\},\{k2,q2\},\{k3,q3\}\}\par
\i0 
where k1,k2,k2 are, depending on the value of the option "kxkykz->Numb|Size" numbers of parts or ave
rage sizes of objects to be produced in different directions; q1,q2,q3 are the corresponding ratios 
of the last-to-first part sizes;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
V
 is array of cartesian coordinates of 3 vectors normal to the subdivision planes, to be created e.g.
 as\: \i make/O V=\{\{x1,y1,z1\},\{x2,y2,z2\},\{x3,y3,z3\}\}\par
\i0 
t is option string which can be "kxkykz->Numb" (default) or "kxkykz->Size" for the subdivision param
eters to be interpreted as numbers of peices or their average dimensions; "Frame->Lab", "Frame->LabT
ot" or "Frame->Loc" for the subdivision to be performed in the laboratory frame or in local frame of
 the 3D object. The action of "Frame->Lab" and "Frame->LabTot" differs only for containers\:
 "Frame->
Lab" means that each of the objects in the container is subdivided separately; "Frame->LabTot" means
 that all objects in the container are subdivided as one object, by the same planes. t can contain c
omposition of these sub-strings separated by ";", e.g.\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
"kxkykz->Size;Frame->LabTot".\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the object (container) created by subdivision of the object n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjDivMagCyl\b0\ulnone (n, S, C, r, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n, r\par
\tab wave S, C\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Subdivides the object n by a set of coaxial elliptic cylinders.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of a 3D object to subdivide;\par
\pard\plain\s2\li360\ri720\sa60\fs20
S is array of main subdivision parameters, to be created e.g. as \par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O S=\{\{k1,q1\},\{k2,q2\},\{k3,q3\}\}\par
\i0 
where k1,k2,k2 are, depending on the value of the option "kxkykz->Numb|Size" numbers of parts or ave
rage sizes of objects to be produced in radial, azimuthal, and axial directions respectively; q1,q2,
q3 are the corresponding ratios of the last-to-first part sizes;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
C
 is array of cartesian coordinates of points and vectors specifying positions of subdividing coaxial
 elliptic cylinders in space, to be created e.g. as\par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O C=\{\{ax,ay,az\},\{vx,vy,vz\},\{px,py,pz\}\}\par
\i0 
where the point (ax,ay,az) and the vector (vx,vy,vz) define the axis of the subdividing cylinders; o
ne of two axes of the cylinder base ellipses is exactly the perpendicular from the point (px,py,pz) 
to the cylinder axis;\par
\pard\plain\s2\li360\ri720\sa60\fs20
r is the ratio of the base ellipse axes lengths;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t is options string which can be "kxkykz->Numb" (default) or "kxkykz->Size" for the subdivision para
meters to be interpreted as numbers of peices or their average dimensions; "Frame->Lab", "Frame->Lab
Tot" or "Frame->Loc" for the subdivision to be performed in the laboratory frame or in local frame o
f the 3D object. The action of "Frame->Lab" and "Frame->LabTot" differs only for containers\:
 "Frame-
>Lab" means that each of the objects in the container is subdivided separately; "Frame->LabTot" mean
s that all objects in the container are subdivided as one object, by the same planes. t can contain 
composition of these sub-strings separated by ";", e.g.\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
"kxkykz->Size;Frame->LabTot".\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the object (container) created by subdivision of the object n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjGeoVol\b0\ulnone (n)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes geometrical volume of a 3D object referenced by n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of a 3D object.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns the volume value.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjGeoLim\b0\ulnone (D, n)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave D\par
\tab variable n\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes cartesian coordinates of extremity points of the object n in laboratory frame.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
D is array of coordinates of extremity points of the object n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of a 3D object.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjDrwOpenGL\b0\ulnone (n, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Starts an application for viewing of 3D geometry of the object referenced by n. The viewer is based 
on the GLUT / OpenGL graphics library. \par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of a 3D object;\par
t is a string specifying optional parameters. The supported options are\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
"Axes->True" (default) or "Axes->False" for showing or not the axes of the Cartesian laboratory fram
e,\par
"EdgeLines->True" (default) or "EdgeLines->False" for highlighting or not the edge lines of 3D objec
t(s),\par
"Faces->True" (default) or "Faces->False" for showing or not visible faces of the 3D objects.\par
The string t can contain any composition of these option sub-strings, separated by ";", e.g.\:\par
"Axes->False;Faces->False".\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjDrwQD3D\b0\ulnone (n, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Starts an application for viewing of 3D geometry of the object referenced by n. The viewer is based 
on the QuickDraw 3D graphics library developed by Apple. \par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of a 3D object;\par
t is a string specifying optional parameters. The supported options are\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
"Axes->True" (default) or "Axes->False" for showing or not the axes of the Cartesian laboratory fram
e,\par
"EdgeLines->True" (default) or "EdgeLines->False" for highlighting or not the edge lines of 3D objec
t(s),\par
"Faces->True" (default) or "Faces->False" for showing or not visible faces of the 3D objects.\par
The string t can contain any composition of these option sub-strings, separated by ";", e.g.\:\par
"Axes->False;Faces->False".\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radObjDrwAtr\b0\ulnone (n, C, d)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n, d\par
\tab wave C\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Applies drawing attributes - RGB color and line thickness to the object referenced by n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of a 3D object;\par
\pard\plain\s2\li360\ri720\sa60\fs20
C is array of 3 numbers from 0 to 1 specifying intensities of red, green and blue colors;\par
d is line thickness parameter.\par
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfPlSym\b0\ulnone (P, V)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, V\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a symmetry with respect to plane defined by a point and a normal vector.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
P is array of 3 numbers representing cartesian coordinates of a point in the plane;\par
V is array of 3 numbers representing cartesian coordinates of a vector normal to the plane.\par
Returns reference number of the space transformation created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfRot\b0\ulnone (P, V, a)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, V\par
\tab variable a\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a rotation.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
P is array of 3 numbers representing cartesian coordinates of a point belonging to the rotation axis
;\par
V is array of 3 numbers representing cartesian coordinates of a vector parallel to the rotation axis
;\par
\pard\plain\s2\li360\ri720\sa60\fs20
a is rotation angle in radians.\par
Returns reference number of the space transformation created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfTrsl\b0\ulnone (V)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave V\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a translation.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
V is array of 3 numbers representing cartesian coordinates of the translation vector.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the space transformation created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfInv\b0\ulnone ()\par
\pard\plain\s0\ri720\tx360\fs20
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a field inversion.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the transformation created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfCmbL\b0\ulnone (s1, s2)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable s1, s2\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Multiplies original space transformation s1 by another transformation s2 from left.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
s1 is reference number of the original space transformation;\par
s2 is reference number of another space transformation.\par
Returns reference number of the final space transformation - the result of the multiplication.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfCmbR\b0\ulnone (s1, s2)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable s1, s2\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Multiplies original space transformation s1 by another transformation s2 from right.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
s1 is reference number of the original space transformation;\par
s2 is reference number of another space transformation.\par
Returns reference number of the final space transformation - the result of the multiplication.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfMlt\b0\ulnone (n, s, m)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n, s, m\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates m-1 symmetry objects of the object n. Each symmetry object is derived from the previous one 
by applying space transformation s to it. Following this, the object n becomes equivalent to m diffe
rent objects.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of the original 3D object to which symmetries should be applied;\par
s is reference number of a space transformation;\par
m is multiplicity of the space transformation.\par
Returns reference number of the 3D object with the symmetries applied.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfOrnt\b0\ulnone (n, s)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n, s\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Orients object n by applying transformation s to it once.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of the original 3D object to which symmetries should be applied;\par
s is reference number of a space transformation;\par
Returns reference number of the 3D object with the transformation applied.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfZerPara\b0\ulnone (n, P, V)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab wave P, V\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates an object mirror with respect to a plane. The object mirror possesses the same geometry as n
, but its magnetization and/or current densities are modified in such a way that the magnetic field 
produced by the n and its mirror in the plane of mirroring is perpendicular to this plane.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of a magnetic field source object to which the symmetry should be applied;
\par
P is array of 3 cartesian coordinates of a point in the mirror plane;\par
V is array of 3 cartesian coordinates of a vector normal to the mirror plane.\par
Returns reference number of the final object.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radTrfZerPerp\b0\ulnone (n, P, V)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab wave P, V\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates an object mirror with respect to a plane. The object mirror possesses the same geometry as n
, but its magnetization and/or current densities are modified in such a way that the magnetic field 
produced by the n and its mirror in the plane of mirroring is parallel to this plane.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of a magnetic field source object to which the symmetry should be applied;
\par
P is array of 3 cartesian coordinates of a point in the mirror plane;\par
V is array of 3 cartesian coordinates of a vector normal to the mirror plane.\par
Returns reference number of the final object.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radMatLin\b0\ulnone (K, M)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave K, M\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a linear anisotropic magnetic material.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
K is array of 2 magnetic susceptibility values for the directions parallel and perpendicular to the 
easy magnetization axis;\par
\pard\plain\s2\li360\ri720\sa60\fs20
M is array of 3 cartesian coordinates of the remanent magnetization vector.\par
Returns reference number of the magnetic material created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radMatSatIso\b0\ulnone (D, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave D\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a nonlinear isotropic magnetic material. The dependence of the magnetization magnitude on th
e magnetic field strength magnitude is defined either by the formula\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
M = ms1*tanh(ksi1*H/ms1) + ms2*tanh(ksi2*H/ms2) + ms3*tanh(ksi3*H/ms3) \par
\pard\plain\s2\li380\ri720\sa60\fs20
with the constants \{\{ksi1,ms1\},\{ksi2,ms2\},\{ksi3,ms3\}\}
 given by the array D, or by array of pairs of real numbers \{\{h1,m1\},\{h2,m2\},...\}\}
. Both the magnetization and the magnetic field strength should be defined in Tesla.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-160\ri720\sa60\fs20
D is 2D array defining the dependence of the magnetization magnitude on the magnetic field strength 
magnitude. The interpretation of the array D depends on the value of the string variable t. \par
\pard\plain\s2\li540\ri720\sa60\fs20
If t is "frm", D should be interpreted as array of material constants for the formula given above, i
n the format\:\par
\i make/O D=\{\{ksi1,ms1\},\{ksi2,ms2\},\{ksi3,ms3\}\}\i0 ;\par
If t is "tab", D should be interpreted as tabulated dependence M vs H (both in Tesla)\:\par
\i make/O D=\{\{h1,m1\},\{h2,m2\},...\}\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t is a string which can be either "frm" or "tab". This defines how the array D should be interpreted
.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the magnetic material created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radMatSatLam\b0\ulnone (D, t, p, N)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave D, N\par
\tab string t\par
\tab variable p\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a nonlinear laminated magnetic material. The dependence of the magnetization magnitude on th
e magnetic field strength magnitude for the corresponding isotropic case is defined either by the fo
rmula\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
M = ms1*tanh(ksi1*H/ms1) + ms2*tanh(ksi2*H/ms2) + ms3*tanh(ksi3*H/ms3) \par
\pard\plain\s2\li380\ri720\sa60\fs20
with the constants \{\{ksi1,ms1\},\{ksi2,ms2\},\{ksi3,ms3\}\}
 given by the array D, or by array of pairs of real numbers \{\{h1,m1\},\{h2,m2\},...\}\}
. Both the magnetization and the magnetic field strength should be defined in Tesla.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-160\ri720\sa60\fs20
D is 2D array defining the dependence of the magnetization magnitude on the magnetic field strength 
magnitude. The interpretation of the array D depends on the value of the string variable t. \par
\pard\plain\s2\li540\ri720\sa60\fs20
If t is "frm", D should be interpreted as array of material constants for the formula given above, i
n the format\:\par
\i make/O D=\{\{ksi1,ms1\},\{ksi2,ms2\},\{ksi3,ms3\}\}\i0 ;\par
If t is "tab", D should be interpreted as tabulated dependence M vs H\:\par
\i make/O D=\{\{h1,m1\},\{h2,m2\},...\}\}\i0 ;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t is a string which can be either "frm" or "tab". This defines how the array D should be interpreted
;\par
p is the lamination stacking factor;\par
N is array of 3 cartesian coordinates of a vector normal to the lamination planes.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the magnetic material created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radMatSatAniso\b0\ulnone (Dpar, Dper)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave Dpar, Dper\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a nonlinear anisotropic magnetic material. The dependence of the magnetization on the magnet
ic field strength in the directions parallel to the easy axis is defined either by\:\par
\pard\plain\s2\li540\ri-340\sa60\fs20
M = ms1*tanh(ksi1*(h-hc1)/ms1) + ms2*tanh(ksi2*(h-hc2)/ms2) + ms3*tanh(ksi3*(h-hc3)/ms3) + ksi0*(h-h
c0), \par
\pard\plain\s2\li380\ri720\sa60\fs20
or by\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
M = ksi0*h, \par
\pard\plain\s2\li380\ri720\sa60\fs20
with the constants \{ksi1,ms1,hc1,ksi2,ms2,hc2,ksi3,ms3,hc3,ksi0,hc0\} given by the array Dpar.\par
\pard\plain\s2\li360\ri720\sa60\fs20
The dependence of the magnetization on the magnetic field strength in the directions perpendicular t
o the easy axis is defined either by\:\par
\pard\plain\s2\li540\ri-340\sa60\fs20
M = ms1*tanh(ksi1*h/ms1) + ms2*tanh(ksi2*h/ms2) + ms3*tanh(ksi3*h/ms3) + ksi0*h, \par
\pard\plain\s2\li380\ri720\sa60\fs20
or by\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
M = ksi0*h, \par
\pard\plain\s2\li380\ri720\sa60\fs20
with the constants \{ksi1,ms1,ksi2,ms2,ksi3,ms3,ksi0\} given by the array Dper.\par
At least one of the magnetization vector components should non-linearly depend on the field strength
.\par
The direction of the easy axis should be specified at creation of a 3D object to which this material
 is applied.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-160\ri720\sa60\fs20
Dpar is 1D array defining the material constants used in the formulae given above in the direction p
arallel to the easy axis, to be created e.g. as\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O Dpar=\{ksi1,ms1,hc1,ksi2,ms2,hc2,ksi3,ms3,hc3,ksi0,hc0\}\i0 ;\par
\pard\plain\s2\li540\fi-160\ri720\sa60\fs20
Dper is 1D array defining the material constants used in the formulae given above in the direction p
erpendicular to the easy magnetization axis, to be created e.g. as\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O Dper=\{ksi1,ms1,ksi2,ms2,ksi3,ms3,ksi0\}\i0 ;\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the magnetic material created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radMatStd\b0\ulnone (t, m)\par
\pard\plain\s0\ri720\tx360\fs20
\tab string t\par
\tab variable m\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a pre-defined magnetic material. The material is identified by its name/formula, given by th
e string t (e.g. "NdFeB", "SmCo5", "Sm2Co17", "Ferrite", "XcO6", "Steel37", "Steel42", "AFK502",...)
.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
t is string describing the common name of the material;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
m is (optional) remanent magnetization parameter of the standard material (is taken into account if 
positive).\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns reference number of the magnetic material created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radMatApl\b0\ulnone (n, m)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n, m\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Applies magnetic material m to 3D object n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of the 3D object;\par
m is reference number of the magnetic material.\par
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radMatMvsH\b0\ulnone (M, n, t, H)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave M, H\par
\tab variable n\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes magnetization from magnetic field strength vector for a given magnetic material or 3D objec
t with the material applied.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
M is magnetization vector to be computed;\par
\pard\plain\s2\li540\fi-160\ri720\sa60\fs20
n is reference number of a magnetic material or a 3D object with magnetic material applied;\par
\pard\plain\s2\li540\fi-140\ri720\sa60\fs20
t is string specifying the component(s) of the magnetization vector to be computed (can be "Mx", "Mz
",...);\par
\pard\plain\s2\li360\ri720\sa60\fs20
H is magnetic field strength vector (in Tesla).\par
Returns number of magnetization components computed.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radRlxPre\b0\ulnone (n0, n1)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n0, n1\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Builds interaction matrix for the object n0, treating the object n1 as additional constant source of
 magnetic field.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n0 is reference number of the main object, for which the interaction matrix should be created;\par
n1 is reference number of another object treated as additional constant source of magnetic field (ca
n be 0).\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns integer number referencying the interaction matrix created.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radRlxMan\b0\ulnone (D, n, m, i, r)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave D\par
\tab variable n, m, i, r\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Executes "manual" relaxation procedure for the interaction matrix referenced by n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
D is array of numbers describing the result of the relaxation;\par
n is reference number of the interaction matrix;\par
m is an integer number specifying the method of relaxation to be used;\par
i is an integer number specifying number of iterations to be made;\par
r is a real number between 0 and 1 specifying the relaxation parameter.\par
Returns i.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radRlxAuto\b0\ulnone (D, n, p, i, m, t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave D\par
\tab variable n, p, i, m\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Executes "automatic" relaxation procedure for the interaction matrix referenced by n. The relaxation
 stops whenever the change of magnetization (averaged over all sub-elements) between two successive 
iterations is smaller than p or the number of iterations is larger than i.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
D is array of numbers describing the result of the relaxation\:
 D[0] is average absolute change in ma
gnetization after previous iteration over all the objects participating in the relaxation, D[1] is m
aximum absolute value of magnetization over all the objects participating in the relaxation, D[2] is
 maximum absolute value of magnetic field strength over central points of all the objects participat
ing in the relaxation, and D[3] is actual number of iterations made. The values D[0]-D[2] are those 
of the last iteration;\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of the interaction matrix;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
p is a real number specifying an absolute precision value for magnetization (in Tesla), to be reache
d by the end of the relaxation procedure;\par
\pard\plain\s2\li360\ri720\sa60\fs20
i is an integer number specifying maximum number of iterations to be made;\par
m is an integer number specifying the method of relaxation to be used;\par
t is a string specifying optional parameters. The supported options are\:\par
\pard\plain\s2\li540\ri720\sa60\tx300\tx440\tx540\fs20
"ZeroM->True" (default) or "ZeroM->False" to specify whether the relaxation should be started by set
ting the magnetization values in all paricipating objects to zero, or the existing magnetization val
ues in the objects should be used.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns actual number of iterations made.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radRlxUpdSrc\b0\ulnone (n)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Updates external field data for the relaxation (to take into account e.g. changes of currents in coi
ls, if any) without rebuilding the interaction matrix.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of the interaction matrix.\par
Returns n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radSolve\b0\ulnone (D, n, p, i, m)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave D\par
\tab variable n, p, i, m\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Builds an interaction matrix for the object referenced by n and performs "autimatic" relaxation proc
edure. The relaxation stops whenever the change of magnetization (averaged over all sub-elements) be
tween two successive iterations is smaller than p or the number of iterations is larger than i. The 
interaction matrix is deleted after the relaxation. \par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
D is array of numbers describing the result of the relaxation\:
 D[0] is average absolute change in ma
gnetization after previous iteration over all the objects participating in the relaxation, D[1] is m
aximum absolute value of magnetization over all the objects participating in the relaxation, D[2] is
 maximum absolute value of magnetic field strength over central points of all the objects participat
ing in the relaxation, and D[3] is actual number of iterations made. The values D[0],..., D[2] are t
hose of the last iteration;\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of the object defining the geometry to solve;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
p is a real number specifying an absolute precision value for magnetization (in Tesla), to be reache
d by the end of the relaxation procedure;\par
\pard\plain\s2\li360\ri720\sa60\fs20
i is an integer number specifying maximum number of iterations to be made;\par
m is an integer number specifying the method of relaxation to be used;\par
Returns actual number of iterations made.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFld\b0\ulnone (B, n, t, P)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave B, P\par
\tab variable n\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes magnetic field created by the object n at one or many points.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
B is array of magnetic field values (to be computed);\par
n is reference number of the magnetic field source object;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t is string identifying magnetic field components to be computed (e.g.\: "B", "Bx", "By", "H",...);
\par
P is 2D array of coordinates of all points where the field should be computed, to be created e.g. as
\:\par
\pard\plain\s2\li540\ri720\sa60\fs20
\i make/O P=\{\{x1,y1,z1\},\{x2,y2,z2\},...\}\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns the first component of the calculated magnetic field (B[0]).\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldLst\b0\ulnone (B, n, t, P1, P2, np, s)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave B, P1, P2\par
\tab variable n, np, s\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes magnetic field created by object obj in np equidistant points along a line segment from P1 
to P2; the field component is specified by the t1 input string.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
B is array of magnetic field values (to be computed);\par
n is reference number of the magnetic field source object;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t is string identifying magnetic field components to be computed (e.g.\:
 "B" or "Bx" or "By" or "H",...);\par
P1 is array of 3 real numbers specifying cartesian coordinates of an edge point of the line segment;
\par
P2 is array of 3 real numbers specifying cartesian coordinates of another edge point of the line seg
ment;\par
\pard\plain\s2\li360\ri720\sa60\fs20
np is number of points where the magnetic field should be calculated;\par
s is start value for the longitudinal position.\par
Returns the first component of the calculated magnetic field.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldInt\b0\ulnone (I, n, t1, t2, P1, P2)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave I, P1, P2\par
\tab variable n\par
\tab string t1, t2\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes magnetic field integral produced by the object n along a straight line specified by points 
P1 and P2; depending on the t1 string value, the integral is infinite ("inf") or finite ("fin"), fro
m P1 to P2; the field integral component is specified by the t2 string. The unit of the calculated f
ield integral is T*mm.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
I is array of field integral value(s) (to be computed);\par
n is reference number of the magnetic field source object;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t1 is string specifying the type of field integral\: finite ("fin") or infinite ("inf");\par
t2 is string identifying the field integral component(s) to be computed (e.g.\:
 "B" or "Bx" or "By" or "Bz" or "H",...);\par
\pard\plain\s2\li540\fi-160\ri720\sa60\fs20
P1 is array of 3 real numbers specifying cartesian coordinates of a point on the integration line;
\par
P2 is array of 3 real numbers specifying cartesian coordinates of another point on the integration l
ine.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns the first component of the calculated magnetic field component.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldPtcTrj\b0\ulnone (D, n, e, D0, S, np)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave D, D0, S\par
\tab variable n, e, np\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes transverse coordinates and their derivatives (angles) of a relativistic charged trajectory 
in the magnetic field produced by object referenced by n, using a Runge-Kutta integration. The charg
e of the particle is that of electron. All positions are in millimeters and angles in radians.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
D is array of computed tragectory parameters;\par
n is reference number of the magnetic field source object;\par
e is particle energy in GeV;\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
D0 is array of 4 real numbers specifying initial transverse coordinates and angles of the trajectory
\: \{x0,dxdy0,z0,dzdy0\} (y is longitudinal coordinate);\par
S is array of 2 real numbers specifying limits of the longitudinal position \{y1,y2\};\par
np is number of points where the trajectory should be calculated.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns total number of trajectory data components calculated.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldFocPot\b0\ulnone (n, P1, P2, np)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n, np\par
\tab wave P1, P2\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes "focusing potential" for trajectory of relativistic charged particle in magnetic field prod
uced by the object referenced by n. The integration is made from point P1 to point P2 with np steps.
\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n is reference number of the magnetic field source object;\par
P1 is array of 3 real numbers specifying cartesian coordinates of the first edge point of the integr
ation segment;\par
P2 is array of 3 real numbers specifying cartesian coordinates of an edge point of the integration s
egment;\par
np is number of steps for the integration.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns the computed focusing potential value.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldFocKickPer\b0\ulnone 
(M1, M2, A1, A2, n, P, Ns, per, nper, nps, Nt, r1, np1, d1, r2, np2, d2, nh, tc)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave M1, M2, A1, A2, P, Ns, Nt\par
\tab string tc\par
\tab variable n, per, nper, nps, r1, np1, d1, r2, np2, d2, nh\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes matrices of 2nd order kicks for trajectory of relativistic charged particle in periodic mag
netic field produced by the object n. The computed kick matrices can be used in particle tracking co
des.  The longitudinal integration along one period starts at point P and is done along the directio
n pointed by vector Ns; one direction of the transverse grid is pointed by the vector Nt, the other 
transverse direction is given by vector product of Nt and Ns.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
M1 is 2D array of real numbers representing the matrix of kick values (to be computed) in the first 
transverse direction given by the Nt vector;\par
M2 is 2D array of real numbers representing the matrix of kick values (to be computed) in the second
 transverse direction given by vector product of Nt and Ns;\par
A1 is 1D array of position values in the first transverse direction where kick matrix was computed;
\par
A2 is 1D array of position values in the second transverse direction where kick matrix was computed;
\par
n is reference number of the magnetic field source object;\par
P is array of 3 real numbers specifying cartesian coordinates of the integration start point;\par
Ns is array of 3 real numbers specifying cartesian coordinates of a vector defining the longitudinal
 direction for the periodic magnetic field;\par
per is magnetic field period length;\par
nper is number of full periods of the mafnetic field;\par
nps is number of longitudinal points;\par
Nt is array of 3 real numbers specifying cartesian coordinates of a vector defining first transverse
 direction;\par
r1 is range of the transverse grid along direction given by the Nt vector;\par
np1 is number of points in the transverse grid along direction given by the Nt vector;\par
d1 is step to calculate derivative along direction given by Nt vector; d1=0 means that the step for 
derivative calculation is equal to the corresponding step of the transverse grid where kick matrix i
s computed;\par
r2 is range of the transverse grid along direction given by vector product of the vectors Nt and Ns;
\par
np2 is number of points in the transverse grid along direction given by vector product of the vector
s Nt and Ns;\par
d2 is step to calculate derivative along direction given by vector product of Nt and Ns; d2=0 means 
that the step for derivative calculation is equal to the corresponding step of the transverse grid w
here kick matrix is computed;\par
nh is maximum number of magnetic field harmonics to take into account;\par
tc is string with arbitrary comment to be inserted into resulting string t.\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns string containing second-order kick matrices values in the format compatible with particle t
racking computer codes (e.g. BETA).\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldEnr\b0\ulnone (n1, n2, S)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n1, n2\par
\tab wave S\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes potential energy (in Joule) of the object referenced by n1 in the field created by the obje
ct referenced by n2. If all values of the wave S are 0, the function performes the computation based
 on absolute accuracy value for the energy (by default 10 Joule; can be modified by the function rad
FldCmpPrc). Otherwise, the computation is performed based on the subdivision numbers (kx=S[0], ky=S[
1], kz=S[2]).\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
n1 is reference number of the object potential energy of which should be computed;\par
n2 is reference number of the source object creating the magnetic field;\par
S is array of 3 integer numbers specifying subdivision parameters for the energy computation (kx=S[0
], ky=S[1], kz=S[2]). If S[0]=S[1]=S[2]=0, the function performes the computation based on absolute 
accuracy value for the energy (by default 10 Joule, can be modified by the function radFldCmpPrc). 
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns potential energy value (in Joule).\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldEnrFrc\b0\ulnone (F, n1, n2, t, S)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave F, S\par
\tab variable n1, n2\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes force (in Newton) acting on the object referenced by n1 in the field produced by the object
 referenced by n2. If all values of the wave S are 0, the function performes the computation based o
n absolute accuracy value for the force (by default 10 Newton; can be modified by the function radFl
dCmpPrc). Otherwise, the computation is performed based on the subdivision numbers (kx=S[0], ky=S[1]
, kz=S[2]).\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
F is array of force components (to be computed);\par
n1 is reference number of the object potential energy of which should be computed;\par
n2 is reference number of the source object creating the magnetic field;\par
t is string identifying the force components to be computed ("fx", "fy", "fz");\par
S is array of 3 integer numbers specifying subdivision parameters for the energy/force computation (
kx=S[0], ky=S[1], kz=S[2]). If S[0]=S[1]=S[2]=0, the function performes the computation based on abs
olute accuracy value for the force (by default 10 Newton, can be modified by the function radFldCmpP
rc). \par
Returns first force component computed.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldEnrTrq\b0\ulnone (F, n1, n2, t, P, S)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave F, P, S\par
\tab variable n1, n2\par
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes torque (in Newton*mm) with respect to point P, acting on the object n1 in the field produce
d by the object n2. If all values of the wave S are 0, the function performes the computation based 
on absolute accuracy value for the torque (by default 10 Newton*mm; can be modified by the function 
radFldCmpPrc). Otherwise, the computation is performed based on the subdivision numbers (kx=S[0], ky
=S[1], kz=S[2]).\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
F is array of torque components (to be computed); \par
n1 reference number of the object on which the force is acting;\par
n2 is reference number of the source object creating the magnetic field;\par
t is string identifying the force components to be computed ("tx", "ty", "tz");\par
P is array of 3 real numbers specifying cartesian coordinates of the point with respect to which the
 torque should be computed;\par
S is array of 3 integer numbers specifying subdivision parameters for the energy/force/torque comput
ation (kx=S[0], ky=S[1], kz=S[2]). If S[0]=S[1]=S[2]=0, the function performes the computation based
 on absolute accuracy value for the torque (by default 10 Newton*mm, can be modified by the function
 radFldCmpPrc). \par
Returns first torque component computed.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldFrc\b0\ulnone (F, n0, n1)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave F\par
\tab variable n0, n1\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Computes force of the field produced by the object n0 and acting on objects contoured by the shape r
eferenced by n1. n1 can be the result of radObjRecMag (parallelepiped) or radFldFrcShpRtg (rectangle
). This function uses an algorithm based on Maxwell tensor, which may not always provide high effici
ency. We suggest to use the function radFldEnrFrc instead of this function.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
F is array of force components (to be computed);\par
n0 is reference number of the magnetic field source object;\par
n1 is reference number of the sape object.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
Returns first force component computed.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldCmpCrt\b0\ulnone (pb, pa, pi, pf, ptc, pta)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable pb, pa, pi, pf, ptc, pta\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Sets general absolute accuracy levels for computation of magnetic field induction (pb), vector poten
tial (pa), induction integrals along straight line (pi), field force (pf), relativistic particle tra
jectory coordinates (ptc) and angles (pta).\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
pb is absolute accuracy level for magnetic field induction [T];\par
pa is absolute accuracy level for vector potential;\par
pi is absolute accuracy level for magnetic field induction integrals along straight line [T*mm];
\par
pf is absolute accuracy level for the force [N];\par
ptc is absolute accuracy level for particle trajectory coordinate [mm];\par
pta is absolute accuracy level for particle trajectory angle [r].\par
Returns 1 is succeeded, 0 if failed.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldCmpPrc\b0\ulnone (t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Sets general absolute accuracy levels for computation of magnetic field induction (PrcB), vector pot
ential (PrcA), induction integral along straight line (PrcBInt), field force (PrcForce), torque (Prc
Torque), energy (PrcEnergy); relativistic charged particle trajectory coordinates (PrcCoord) and ang
les (PrcAngle). The function works according to the mechanism of string options. The name(s) of the 
option(s) should be\: PrcB , PrcA, PrcBInt, PrcForce, PrcTorque, PrcEnergy, PrcCoord, PrcAngle.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
t is options strings which can be equal to "PrcB->..." or "PrcA->..." or "PrcBInt->..." or "PrcForce
->..." or "PrcTorque->..." or "PrcEnergy->..." or "PrcCoord->..." or "PrcAngle->...", where "..." sh
ould be replaced by the appropriate absolute accuracy level.\par
Returns 1 is succeeded, 0 if failed.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldUnits\b0\ulnone ()\par
\pard\plain\s0\ri720\tx360\fs20
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Shows the physical units currently in use.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns string of physical units currently in use.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldLenRndSw\b0\ulnone (t)\par
\pard\plain\s0\ri720\tx360\fs20
\tab string t\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Switches "on" or "off" randomization of all the length values at creation of Radia objects. The rand
omization magnitude can be set by the function radFldLenTol.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
t is string equal to either "on" or "off".\par
Returns 0 or 1.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldLenTol\b0\ulnone (a, r, z)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable a, r, z\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Sets absolute and relative randomization magnitudes for all the length values, including coordinates
 and dimensions of the objects producing magnetic field, and coordinates of points where the field i
s computed. Optimal values of the parameters can be\:
 r=1E-11, a=L*r, z=a, where L is the distance sc
ale value (in mm) for the problem to be solved. Too small randomization magnitudes can result in run
-time code errors.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
a is absolute position/length randomization magnitude [mm];\par
r is relative position/length randomization magnitude;\par
z is absolute zero tolerance [mm].\par
Returns 1.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radFldFrcShpRtg\b0\ulnone (P, D)\par
\pard\plain\s0\ri720\tx360\fs20
\tab wave P, D\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Creates a rectangle with central point P and dimensions D (to be used for force computation via Maxw
ell tensor).\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
P is array of 3 real numbers specifying cartesian coordinates of the center point;\par
D is array of 2 real numbers specifying dimensions of the rectangle.\par
Returns an integer number referencing the object created.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radUtiDel\b0\ulnone (n)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Deletes object referenced by n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is reference number of the object to be deleted.\par
Returns 0.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radUtiDelAll\b0\ulnone ()\par
\pard\plain\s0\ri720\tx360\fs20
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Deletes all previously created objects.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns 0.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radUtiDmp\b0\ulnone (n)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable n\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Gives information about object referenced by n.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
n is object to show information for.\par
Returns string containing information about object n.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radUtiIntrptTim\b0\ulnone (d)\par
\pard\plain\s0\ri720\tx360\fs20
\tab variable d\par
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Sets interruption time quanta in seconds for platforms with no pre-emptive multitasking.\par
\pard\plain\s0\ri720\tx360\fs20
\par
\pard\plain\s2\li360\ri720\sa60\fs20
d is interruption time quanta [s].\par
Returns d.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
radUtiVer\b0\ulnone ()\par
\pard\plain\s0\ri720\tx360\fs20
\tab \par
\pard\plain\s2\li360\ri720\sa60\fs20
Returns the Radia version number.\par
\pard\plain\s2\li540\fi-180\ri720\sa60\fs20
\par
\par
\pard\plain\s3\li260\fi-260\ri720\sb120\sa120\tx1440\b\ul
\b0\ulnone \'95\tab \b\ul Radia Examples\par
\pard\plain\s4\li260\ri720\tx540\tx1440\tx4320\fs20
Radia for Igor Pro includes several examples describing basic types of magnetostatic computation. 
\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
Example#1\: Uniformly Magnetized Cube\ulnone      \par
\pard\plain\s2\li540\ri720\sa60\fs20
This is the simplest Radia example. A magnetized cube is placed at position \{0,0,0\}
. It is 1 mm in size and is magnetized according to the vector  \{-0.5,1,0.7\}
 in Tesla. The three components of the field at position \{0.52,0.6,0.7\}
 are computed. If everything goes fine, the computed components of the
 magnetic field should be equal or close to\: \{0.127365, 0.0286437, 0.0775051\}.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
Example#2\: Superconducting Wiggler (Coils)\ulnone      \par
\pard\plain\s2\li540\ri720\sa60\fs20
This example consists in the creation of a set of racetrack and circular coils, plotting the coil ge
ometry and the magnetic field produced. This geometry corresponds to a 4T superconducting wiggler. I
t is assumed that the reader has some experience with Igor Pro and that he has successfully run Exam
ple#1.\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
Example#3\: Generic Hybrid Undulator\ulnone      \par
\pard\plain\s2\li540\ri720\sa60\fs20
This example creates and solves a simple Hybrid Undulator made with rectangular blocks. \par
To see the change in the peak field induced by the variation of the magnet size, edit the correspond
ing parameter in the beginning of the procedure RadiaExample3(). To obtain acceptable precision on t
he magnetic field, it is essential to increase the segmentation. This is done at the expense of memo
ry and CPU time. The segmentation in this example has been set to np=\{2,2,5\} for the pole and nm=
\{1,3,1\}
 for the magnet. This corresponds to an absolute error in the peak field of the undulator on the
 order of 1%. The user himself should experience consequences of increasing np and nm and see how CP
U time and memory increase, and how the value of the peak field approaches a limit which is the valu
e looked for. To do so, edit the nm or np values in the RadiaExample3() and re-execute this macro. U
sing segmentation which is too large may result in a memory allocation failure and even crash of the
 Igor Pro. It is a fact that iron pieces need much more segmentation than the magnets since the magn
etization there is very sensitive to the external field.\par
One can also compute the Field Integral produced by such an undulator, forces on the magnets and pol
es, etc. One can build a wedge pole undulator by using polyhedrons or extruded polygons instead of r
ectangular blocks... To learn more, read the Radia documentation, make tests and develop experience.
\par
\par
\pard\plain\s1\li1440\fi-1160\ri720\sb100\sa60\fs20\b\ul
Example#4\: Uniformly Magnetized Polyhedron\ulnone      \par
\pard\plain\s2\li540\ri720\sa60\fs20
This example illustrates the use of a polyhedron shape by means of the "radObjMltExtPgn" function. A
 uniformly magnetized polyhedron is created with a magnetization of 1 Tesla. The field produced by t
his polyhedron is computed and shown to be uniform inside the volume of the polyhedron and equal to 
2/3 Tesla as expected from an analytical integration.\par
It is assumed that the reader has some experience with Mathematica and that he has successfully run 
the Example#1.\par
Start the procedure RadiaExample4() and follow the instructions that may appear. If the execution se
ems successful, try to modify some parameters (see the Reference Guide for the explanations on the R
adia functions) and re-execute the corresponding section. \par
\par
\pard\plain\s2\li540\ri740\sa60\fs20
\par
}
